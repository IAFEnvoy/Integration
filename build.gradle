plugins {
    id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.gradleup.shadow' version '8.3.6' apply false
    id 'maven-publish'
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings "net.fabricmc:yarn:$rootProject.yarn_mappings:v2"
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                // add all the jars that should be included when publishing to maven
                //artifact(jar)             { builtBy remapJar }
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        repositories {
            maven {
                name = "KTTMaven"
                url = "https://maven.kessokuteatime.work/releases"

                credentials {
                    username = System.getenv("KTT_MAVEN_USERNAME")
                    password = System.getenv("KTT_MAVEN_TOKEN")
                }
            }
        }
    }
}

tasks.register('copyJars', Copy) {
    from('fabric/build/libs') {
        include "${rootProject.archives_name}-fabric-${rootProject.mod_version}.jar"
        rename { String fileName ->
            "${rootProject.archives_name}-${rootProject.mod_version}-fabric.jar"
        }
    }
    from('forge/build/libs') {
        include "${rootProject.archives_name}-forge-${rootProject.mod_version}.jar"
        rename { String fileName ->
            "${rootProject.archives_name}-${rootProject.mod_version}-forge.jar"
        }
    }
    from('neoforge/build/libs') {
        include "${rootProject.archives_name}-neoforge-${rootProject.mod_version}.jar"
        rename { String fileName ->
            "${rootProject.archives_name}-${rootProject.mod_version}-neoforge.jar"
        }
    }
    into 'build/libs'
}